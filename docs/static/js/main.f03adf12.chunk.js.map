{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","getGifs","category","a","urlGiphy","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAU,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAS,IACrBP,GAAe,SAAAQ,GAAU,OAAMN,GAAN,mBAAqBM,OAC9CL,EAAe,OAMf,2BACIM,KAAO,OACPC,MAAUR,EACVS,SAlBc,SAAEN,GACxBF,EAAeE,EAAEO,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEyCC,UAAWH,GAFpD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVvB,kBAaZL,GAbY,4CAAH,sDCAPQ,EAAc,SAAC,GAAsB,IAAnBJ,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAClC,OACI,yBAAKI,UAAY,0CACb,yBAAKC,IAAQL,EAAMM,IAAQP,IAC3B,+BAAMA,EAAN,OCFCQ,EAAU,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,SAAc,ECAZ,SAAEA,GAAe,IAAD,EAEdb,mBAAS,CAC/BoB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAAErB,IAEEsB,EDf2BK,CAAc3B,GAAlCc,EAFsB,EAE5BP,KAAcc,EAFc,EAEdA,QAEtB,OACI,oCACI,wBAAIJ,UAAY,qCAAhB,IAAwDjB,EAAxD,KAEEqB,GAAW,uBAAGJ,UAAY,oCAAf,iBAEb,yBAAKA,UAAY,aAGTH,EAAOL,KAAK,SAAAmB,GAAG,OACX,kBAAC,EAAD,eACAC,IAAQD,EAAIjB,IACPiB,UESdE,EAxBM,WAAO,IAAD,EAEa3C,mBAAU,CAAE,cAFzB,mBAEhBO,EAFgB,KAEJR,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BACA,4BAEQQ,EAAWe,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACK6B,IAAQ7B,EACRA,SAAaA,U,MCZzC+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f03adf12.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n    \r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if ( inputValue.length > 2 ) {\r\n            setCategories( categories => [ inputValue, ...categories ] );\r\n            setInputValue( '' );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit } >\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const urlGiphy = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=jib3jyQRkS6zWj5UU0359dEYHmj4D74X`;\r\n    const resp = await fetch( urlGiphy );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn' >\r\n            <img src = { url } alt = { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category}) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className = 'animate__animated animate__fadeIn' > { category } </h3>\r\n\r\n            { loading && <p className = 'animate__animated animate__flash' > Loading ... </p> }\r\n\r\n            <div className = 'card-grid' >\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                        key = { img.id }\r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState,useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            } );\r\n    }, [ category ]);\r\n\r\n    return state; // { data: [], loading: true }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( [ 'One Punch' ] );\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2> \r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                       <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                        // <li key = { category } >{category}</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}